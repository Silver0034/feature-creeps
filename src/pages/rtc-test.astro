---

---

<!-- TODO: Functional, but doesn't do what we want yet. --><!-- Based on the basic example here: https://github.com/feross/simple-peer --><!-- Requires some work to ake it more idiomatic with Astro, such as putting it in utilities and calling it from there.. -->
<style>
    #outgoing {
      width: 600px;
      word-wrap: break-word;
      white-space: normal;
    }
  </style>
  <form>
    <textarea id="incoming"></textarea>
    <button type="submit">submit</button>
  </form>
  <pre id="outgoing"></pre>
  <video src="" id="video"></video>
  <script is:inline src="./node_modules/simple-peer/simplepeer.min.js"></script>
  <script>
    navigator.mediaDevices
      .getUserMedia({
        video: {
          facingMode: true,
        },
        audio: true,
      })
      .then((stream) => {
        const p = new SimplePeer({
          initiator: location.hash === "#1",
          trickle: false,
          stream,
        });
  
        p.on("error", (err) => console.log("error", err));
  
        p.on("signal", (data) => {
          console.log("SIGNAL", JSON.stringify(data));
          document.querySelector("#outgoing").textContent = JSON.stringify(data);
        });
  
        document.querySelector("form").addEventListener("submit", (ev) => {
          ev.preventDefault();
          p.signal(JSON.parse(document.querySelector("#incoming").value));
        });
  
        p.on("connect", () => {
          console.log("CONNECT");
          p.send("whatever" + Math.random());
        });
  
        p.on("data", (data) => {
          console.log("data: " + data);
        });
        p.on("stream", function (stream) {
          let video = document.getElementById("video");
          video.srcObject = stream;
          video.play();
        });
      })
      .catch((error) => {
        console.log(error);
      });
  </script>
  