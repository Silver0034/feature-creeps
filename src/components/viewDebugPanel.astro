---
import type { AstroInstance } from 'astro'
interface AstroInstanceWithSortOrder extends AstroInstance {
	sortOrder: number
}
import type { CollectionEntry } from 'astro:content'
interface Props {
	views: AstroInstanceWithSortOrder[]
}
const { views } = Astro.props as Props
---

<style>
	#debugPanel {
		position: fixed;
		bottom: 4em;
		background-color: lightgray;
		width: 100%;
	}
</style>

<section id='debugPanel'>
	<p>
		<strong>Debug Panel:</strong> Current game state: <span
			class='gameState'>0</span
		>
	</p>
	{
		views.map((view) => {
			const { sortOrder } = view
			const { name } = view.default
			return <button data-state={sortOrder}>{name}</button>
		})
	}
</section>

<script>
	import { getGameStateValue, setGameStateValue } from '@utilities/view-logic'

	function refreshView() {
		const gameState = getGameStateValue()

		const gameStateElement = document.querySelector(
			'#debugPanel .gameState'
		) as HTMLElement

		if (gameStateElement) gameStateElement.innerText = gameState.toString()
	}
	document.addEventListener('gameStateChange', refreshView)
	refreshView()

	function handleDebugPanelClick(event: Event) {
		const target = event.target as HTMLElement
		if (!target) return

		const debugPanel = target.closest('#debugPanel')
		if (!debugPanel) return

		const state = target.getAttribute('data-state')
		if (state) setGameStateValue(parseInt(state))
	}
	document.addEventListener('click', handleDebugPanelClick)
</script>
